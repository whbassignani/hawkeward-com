// Layout
@mixin box-sizing($type: border-box) {

	$prefixes:      ("-webkit-",  "-moz-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}box-sizing: $type;
	}
}

@mixin columns($count, $gap: 20px) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}column-count: $count;
		#{$prefix}column-gap: $gap;
	}
}


// Appearance
@mixin background-size($bgsize: cover) {
	$prefixes:      ("-webkit-",  "-moz-", "-0-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}background-size: $bgsize;
	}
}

@mixin border-radius($radius) {
	$prefixes:      ("-webkit-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}border-radius: $radius;
	}
}

@mixin box-shadow($top, $left, $blur, $color: #000, $inset: false) {
	$prefixes:      ("-webkit-",  "-moz-", "");

	@if $inset {
  	@each $prefix in $prefixes {
  		#{$prefix}box-shadow: inset $top $left $blur $color;
  	}
	} @else {
  	@each $prefix in $prefixes {
  		#{$prefix}box-shadow: $top $left $blur $color;
  	}
	}
}

@mixin box-shadow-with-spread($top, $left, $blur, $spread, $color: #000, $inset: false) {

	$prefixes:      ("-webkit-",  "-moz-", "");

	@if $inset {
  	@each $prefix in $prefixes {
  		#{$prefix}box-shadow: inset $top $left $blur $spread $color;
  	}
	} @else {
  	@each $prefix in $prefixes {
  		#{$prefix}box-shadow: $top $left $blur $spread $color;
  	}
	}
}

@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}

@mixin css-gradient-horizontal($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, right top, from($from), to($to));
	background-image: -webkit-linear-gradient(left, $from, $to);
	background-image: -moz-linear-gradient(left, $from, $to);
	background-image: -o-linear-gradient(left, $from, $to);
	background-image: linear-gradient(to right, $from, $to);
}


// Animations & transforms
@mixin transform($transform...) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "-ms-", "-o-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}transform: $transform;
	}
}

@mixin transition($transition...) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "-o-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}transition: $transition;
	}
}

@mixin transition-with-prefixes($transition...) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "-o-", "");

	@each $prefix in $prefixes {
		#{$prefix}transition: #{$prefix}$transition;
	}
}


// Typography
@mixin bold-spaced-type($letter-spacing: $letter-spacing) {
  font-weight: 700;
  letter-spacing: $letter-spacing;
  text-transform: uppercase;
}