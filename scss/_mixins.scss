@mixin background-size($bgsize: cover) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "-0-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}background-size: $bgsize;
	}
}

@mixin border-radius($radius) {
	// Vendor prefixes
	$prefixes:      ("-webkit-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}border-radius: $radius;
	}
}

@mixin box-shadow($top, $left, $blur, $color: #000, $inset: false) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "");

	@if $inset {
  	@each $prefix in $prefixes {
  		#{$prefix}box-shadow: inset $top $left $blur $color;
  	}
	} @else {
  	@each $prefix in $prefixes {
  		#{$prefix}box-shadow: $top $left $blur $color;
  	}
	}
}

@mixin box-shadow-with-spread($top, $left, $blur, $spread, $color: #000, $inset: false) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "");

	@if $inset {
  	@each $prefix in $prefixes {
  		#{$prefix}box-shadow: inset $top $left $blur $spread $color;
  	}
	} @else {
  	@each $prefix in $prefixes {
  		#{$prefix}box-shadow: $top $left $blur $spread $color;
  	}
	}
}

@mixin box-sizing($type: border-box) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "-ms-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}box-sizing: $type;
	}
}

@mixin columns($count, $gap: 20px) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}column-count: $count;
		#{$prefix}column-gap: $gap;
	}
}

@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}

@mixin css-gradient-horizontal($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, right top, from($from), to($to));
	background-image: -webkit-linear-gradient(left, $from, $to);
	background-image: -moz-linear-gradient(left, $from, $to);
	background-image: -o-linear-gradient(left, $from, $to);
	background-image: linear-gradient(to right, $from, $to);
}

@mixin mq($point) {
	// If primary stylesheet indicates media query support (e.g. style.scss), output media queries.
	// If not (e.g. ie.scss), output the block WITHOUT @media wrapper... for IE.
	@if ($MQs) {
		 @media ($point) {
			 @content;
		 }
	} @else {
		@content;
	}
}

// Same as @mixin mq($point), except allows a longer string of media query conditions. E.g. min-width and max-width, or multiple DPI checkers.
@mixin mq-multiple($points) {
	@if ($MQs) {
		 @media #{$points} {
			 @content;
		 }
	} @else {
		@content;
	}
}

@mixin transform($transform...) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "-ms-", "-o-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}transform: $transform;
	}
}

@mixin transition($transition...) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "-o-", "");
	
	@each $prefix in $prefixes {
		#{$prefix}transition: $transition;
	}
}

@mixin transition-with-prefixes($transition...) {
	// Vendor prefixes
	$prefixes:      ("-webkit-",  "-moz-", "-o-", "");

	@each $prefix in $prefixes {
		#{$prefix}transition: #{$prefix}$transition;
	}
}